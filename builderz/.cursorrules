# Cursor Rules Configuration

# Commit Message Format Rules
commit_message:
  # Format: <type>(<scope>): <subject>
  # Example: feat(auth): add login functionality
  format: "^(feat|fix|docs|style|refactor|test|chore|perf)(?:\\([a-z]+\\))?: .{1,72}$"
  
  # Types explanation:
  # feat: A new feature
  # fix: A bug fix
  # docs: Documentation only changes
  # style: Changes that do not affect the meaning of the code
  # refactor: A code change that neither fixes a bug nor adds a feature
  # test: Adding missing tests or correcting existing tests
  # chore: Changes to the build process or auxiliary tools
  # perf: A code change that improves performance

  # Rules for the commit message
  rules:
    - "Use the imperative mood in the subject line"
    - "Capitalize the subject line"
    - "Do not end the subject line with a period"
    - "Limit the subject line to 72 characters"
    - "Use the body to explain what and why vs. how"

# Testing Rules
testing:
  requirements:
    - "Write tests for all new features"
    - "Maintain minimum 80% test coverage"
    - "Include both unit and integration tests"
  
  naming:
    pattern: "{filename}.test.{ext}"
    example: "utils.test.ts" 